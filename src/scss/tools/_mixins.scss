@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin unbuttonize {
  // This removes styles added by default to button elements.
  // For when something should semantically be a button,
  // but isn't buttony in appearance.
  background-color: transparent;
  color: inherit;
  border: none;
  margin: 0;
  padding: 0;
  text-align: inherit;
  font: inherit;
  border-radius: 0;
  appearance: none; // Just in case we missed anything.
}

// Auto-generates media queries for looping content
@mixin loop-mq {
  @content;
  @each $key, $val in $grid-breakpoints {
    @media (min-width: #{$val}) {
      &\@#{$key} {
        @content;
      }
    }
  }
}

@mixin default-paragraph {
  font-size: space(md);
  color: $c-charcoal;
  line-height: 1.45;
  margin: 0 0 1.25rem;

  &:only-child,
  &:last-child {
    margin-bottom: 0;
  }

  @media (min-width: $bp-sm) {
    font-size: 1.125rem;
    margin: 0 0 space(lg);
  }
}

@mixin default-link {
  // For browsers that don't support custom properties,
  // we define some base styles that work on most background colors.
  color: inherit;
  border-bottom: 2px solid;
  border-color: $c-default-link;
  text-decoration: none;

  transition: background-position $ease-out-expo 300ms;

  background-size: 100% 200%;
  background-position-y: -100%;
  background-image: linear-gradient(to top, transparent 50%, $c-default-link 50%);
  background-repeat: no-repeat;

  &:hover,
  &:focus {
    background-position-y: -50%;
  }
}

@mixin visually-hidden($status:null) {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); // IE6, IE7
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;

  @if $status == 'disable' {
    position: static !important;
    clip: auto !important;
    height: auto !important;
    width: auto !important;
    overflow: visible;
  }
}

@mixin focus-styles {
  // Disable native outline since we're drawing our own via box-shadow
  outline: none;

  html.safe-focus & {
    // This draws a doubled-up border, which is white and navy. This is to ensure
    // it's visible on all backgrounds. It's marked as !important so this focus
    // state takes effect even when used on elements with higher-specificity
    // box-shadows applied to them. And because focus states are important. :)
    box-shadow:
      0 0 0 2px $c-safe-focus,
      0 0 0 4px white !important;
  }
}

@mixin font-stack-primary($weight: 400) {
  font-family: $font-stack-primary;
  font-weight: $weight;

  // For browsers that support variable fonts
  @supports (font-variation-settings: normal) {
    font-family: $font-stack-primary-variable;
    font-variation-settings: "wght" $weight;
  }
}

@mixin font-stack-decorative {
  font-family: $font-stack-decorative;

  // For browsers that support variable fonts
  @supports (font-variation-settings: normal) {
    font-family: $font-stack-decorative-variable;
    font-variation-settings: "wght" 700;
  }
}

@mixin alphabet-letter($color: $c-monkey-brown) {
  @include font-stack-primary($weight: 700);
  color: $color;
  font-size: 20.5rem;
  line-height: 0.65;

  @media (min-width: $bp-sm) {
    font-size: 26.875rem;
  }
}
